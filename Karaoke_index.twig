{% extends 'layout.twig' %}
{% import '/macro/iptw_macro.twig' as main_macro %}
{% set title = ('Karaoke'|trans ~ ': ' ~ 'karaoke list'|trans) | trans %}

{% block content %}
    <div id="iptv_list">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                {{ main_macro.get_filter('protocol', 'Protocol'|trans, 'id', 'title', app['allProtocols'], 3) }}
                {{ main_macro.get_filter('status', 'State'|trans, 'id', 'title', app['allStatus'], 3) }}
                <a href="{{app.request.baseUrl}}/{{app.controller_alias}}/add-karaoke" class="btn btn-success pull-right" id="add_karaoke">{{ 'Add composition'|trans }}</a>
            </div>
        </div>

        <div class="row">
            <div class="box">
                {% if attribute(app, 'dropdownAttribute') is defined %}
                    {{ main_macro.get_dropdown_attribute(app['dropdownAttribute']) }}
                {% endif %}
                <div class="box-content">
                    <div class="box-content no-padding">
                        <div class="dataTables_processing"></div>
                        <table class="table  table-hover table-datatable" id="datatable-1">
                            {% if attribute(app, 'dropdownAttribute') is defined %}
                                {{ main_macro.get_datatable_head(app['dropdownAttribute']) }}
                            {% endif %}
                            <tbody>

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="modalbox_ad">
        <div class="devoops-modal">
            <div class="devoops-modal-header">
                <div class="modal-header-name">
                    <span></span>
                </div>
                <div class="box-icons">
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <form class="form-horizontal" role="form" id="karaoke_form" action="{{ app.request.baseUrl }}/{{ app.controller_alias }}/save-karaoke">
                <div class="devoops-modal-inner">
                    <div class="box">
                        <div class="box-content">
                            <!-- track name -->
                            <div class="form-group">
                                <label class="col-sm-3 control-label ">{{ 'Title'|trans }}<span class="icon-required">*</span></label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10 ">
                                        <input type="hidden" name="id" class="own_fields">
                                        <input type="text" name="name"  data-validation=required class='own_fields form-control'>
                                    </div>
                                </div>
                            </div>

                            <!-- singer -->
                            <div class="form-group">
                                <label class="col-sm-3 control-label ">{{ 'Artist'|trans }}<span class="icon-required">*</span></label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10">
                                        <input type="text" name="singer"  data-validation=required class='form-control own_fields'>
                                    </div>
                                </div>
                            </div>

                            <!-- protocol -->
                            <div class="form-group">
                                <label class="col-sm-3 control-label ">{{ 'Protocol'|trans }}<span class="icon-required">*</span></label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10 ">
                                        <select  data-validation=required class="populate placeholder own_fields" name="protocol" id="s2_protocol">
                                            {% if attribute(app, 'allProtocols') is defined %}
                                                {% for s_item in app['allProtocols'] %}
                                                    <option value="{{s_item.id}}">{{s_item.title}}</option>
                                                {% endfor %}
                                            {% endif %}
                                        </select>
                                    </div>
                                    <span class="help-inline col-xs-10 col-sm-10">
                                        <span class="small txt-default">{{ 'Protocol of the content delivery (http, nfs, custom url). The selection of the http and nfs protocols means that file will be stored on the server. The unique title will be created, which should be given to the added file. Custom url means that file is downloaded from the network. In this case, it is necessary to write a direction to the file in solution + url format.'|trans }}</span>
                                    </span>
                                </div>
                            </div>

                            <!-- URL -->
                            <div class="form-group">
                                <label class="col-sm-3 control-label ">RTSP/HTTP URL<span class="icon-required">*</span></label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10">
                                        <input type="text" name="rtsp_url" class='form-control own_fields' data-validation = 'custom' data-validation-regexp = '^(\w+\s)?\w+\:\/\/.+$' data-validation-error-msg = "{{ 'Invalid format links'|trans }}">
                                    </div>
                                    <span class="help-inline col-xs-10 col-sm-10">
                                        <span class="small txt-default">{{ 'Format solution + URL. Example fmpeg http://anon.nasa.net/download_135_720p.wmv'|trans }}</span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="devoops-modal-bottom">
                    <div class="box">
                        <div class="box-content">
                            <div class="row">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-success  pull-right">{{ 'Save'|trans }}</button>
                                    <button type="reset" class="btn btn-default pull-right" >{{ 'Cancel'|trans }}</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script type="text/javascript" defer>

        var conf = {
            form: '#karaoke_form',
            lang : '{{ app.language }}',
            showHelpOnFocus : true,
            validateHiddenInputs: true,
            ignore: ['.ignore'],
            modules: 'jsconf',
            onSuccess: function () {
                var sendData = new Object();
                var lengthObj = 0;
                var form_fields = $("#modalbox_ad input.own_fields:not(:disabled), #modalbox_ad select.own_fields:not(:disabled)");
                form_fields.each(function () {
                    if ($(this).val()) {
                        sendData[this.name] = $(this).val();
                        lengthObj++;
                    }
                });
                if (lengthObj < form_fields.length) {
                    alert('{{ 'You must fill in all fields'|trans }}');
                    return false;
                }
                ajaxPostSend($("#modalbox_ad form").attr('action'), sendData, false, false);
                return false;
            },
            onError: function () {
                return false;
            }
        };

        function closeModalBox(){
            $("#modalbox").hide();
            $('#modalbox').find('.modal-header-name span').empty();
            $('#modalbox').find('.devoops-modal-inner').empty();
            $('#modalbox').find('.devoops-modal-bottom').empty();
        }

        function DemoSelect2() {
            $.getScript("{{ app.request.baseUrl }}/plugins/select2/i18n/{% if app["language"] %}{{ app["language"] }}{% else %}en{% endif %}.js", function () {
                $.fn.select2.defaults.set('dropdownAutoWidth', 'false');
                $.fn.select2.defaults.set('width', '100%');
                $('#s2_protocol').select2({minimumResultsForSearch: -1});
            });
        }

        function checkModalProtocol(){
            var value = $("#s2_protocol").val();
            var urlGroup = $("#s2_protocol").closest('div.form-group').next('div.form-group');
            if (value == 'custom') {
                urlGroup.stop(true, true).clearQueue().show().find('input').removeAttr('disabled');
            } else {
                urlGroup.stop(true, true).clearQueue().hide().find('input').attr('disabled', 'disabled');
            }
        }

        function TestTable1() {
            $('#datatable-1').on('xhr.dt', function (e, settings, json) {
                if (typeof (json.data) == 'object' && json.data.length >0) {
                    var date;
                    for (var i in json.data) {
                        var id = json.data[i].id;
                        var status = json.data[i].status;
                        var accessed = json.data[i].accessed;
                        var done  = json.data[i].done;
                        var name = json.data[i].name;
                        json.data[i].rtsp_url = json.data[i].protocol != 'custom'? "<a class='main_ajax' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/check-karaoke-source' data-karaokeid='" + id + "'>{{ 'in storage'|trans }}</a>": (json.data[i].rtsp_url.length > 0 ? json.data[i].rtsp_url.slice(0, 30)+'...':'');

                        json.data[i].operations = "<div class='col-xs-3 col-sm-8'>\n\
                                                        <a href='#' class='dropdown-toggle' data-toggle='dropdown'>\n\
                                                            <i class='pull-right fa fa-cog'></i>\n\
                                                        </a>\n\
                                                        <ul class='dropdown-menu pull-right'>\n\
                                                            <li>\n\
                                                                <a class='main_ajax' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/karaoke-list-json' data-karaokeid='" + id + "'>\n\
                                                                    <span>{{ 'Edit'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a " + ( status == 0 && accessed == 0 ?"disabled='disabled'":"") + " class='main_ajax' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/toggle-karaoke-accessed' data-karaokeid='" + id + "' data-accessed='" + accessed + "'>\n\
                                                                    <span>" + ( accessed == 0 ?"{{ 'Publish'|trans }}":"{{ 'Unpublish'|trans }}") + "</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class='main_ajax' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/check-karaoke-source' data-karaokeid='" + id + "'>\n\
                                                                    <span>{{ 'Check file'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class='main_ajax' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/toggle-karaoke-done' data-karaokeid='" + id + "' data-done='" + done + "'>\n\
                                                                    <span>" + ( done != 0 ? "{{ 'Cancel performing of the task'|trans }}" : "{{ 'Confirm performing of the task'|trans }}") + "</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class='main_ajax' href='{{ app.request.baseUrl }}/{{ app.controller_alias }}/remove-karaoke' data-karaokeid='" + id + "'>\n\
                                                                    <span>{{ 'Delete'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                        </ul>\n\
                                                    </div>";
                        json.data[i].accessed = accessed != 0 ? "<span class='txt-success'>{{ 'Published'|trans }}</span>" : "<span>{{ 'Unpublished'|trans }}</span>";
                        json.data[i].accessed += ' <a href="{{ app.request.baseUrl }}/tasks/task-detail-karaoke?id='+id+'">№' + id + '</a>';
                        if (parseInt(status, 10) == 0) {
                            json.data[i].accessed += "<br><span class=''>{{ 'Error'|trans }}</span>"
                        }
                        json.data[i].name = '<a class="main_ajax" href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/karaoke-list-json" data-karaokeid="' + id + '">' + name + '</a>';
                        json.data[i].done = done != 0 ? '<span class="">{{ 'Completed'|trans }}</span>' : '<span class="">{{ 'Do not completed'|trans }}</span>';

                        date = json.data[i]['added'];
                        if (date > 0) {
                            date = new Date(date * 1000);
                            json.data[i]['added'] = date.toLocaleFormat("%b %d, %Y");
                        }

                    }
                }
            }).dataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "{{ app.request.baseUrl }}/{{ app.controller_alias }}/karaoke-list-json",
                    "data": function (d) {
                        var params = $.parseParams(window.location.href.split('?')[1] || ''); //window.location.href.split('?')[1] || '' 
                        for (var i in params) {
                            d[i] = params[i];
                        }
                    }
                },
                "deferLoading": [ {{ app.recordsFiltered }}, {{ app.totalRecords }} ],
                "language": {
                    "url": "{{ app.datatable_lang_file }}"
                },
                {% if attribute(app, 'dropdownAttribute') is defined %}
                {{ main_macro.get_datatable_column(app['dropdownAttribute']) }}
                {% endif %}
                "bFilter": true,
                "bPaginate": true,
                "bInfo": true,
                "order": [[ 0, "asc" ]],
                "columnDefs": [
                    { className: "action-menu", "targets": [ -1 ] },
                    {"searchable": false, "targets": [-1, -2]},
                    {"sortable": false, "targets": [-1,]}
                ]
            }).prev('.dataTables_processing').hide('');
            $('#datatable-1').DataTable().ajax.reload();
        }

        function yelp() {
            $(document).ready(function () {

                $.validate(conf);

                $(document).on('click', "a.main_ajax[disabled!='disabled']", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var sendData = $(this).data();
                    ajaxPostSend($(this).attr('href'), sendData, false, false);
                    $(this).closest('div.open').removeClass('open');
                    return false;
                });

                $(document).on('click', "a.main_ajax[disabled][href*='toggle-karaoke-accessed']", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var data = { error: "{{ 'File unavailable and cannot be published'|trans }}"};
                    JSshowModalBox();
                    JSErrorModalBox(data);
                    $(this).closest('div.open').removeClass('open');
                    return false;
                });

                $("#form_reset").on('click', function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    $(this).closest('form').get(0).reset();
                    return false;
                });

                $("#modalbox_ad button[type='submit']").on('click', function (e) {
                    e.stopPropagation();
                    e.preventDefault();

                    if ($("#karaoke_form").isValid({}, conf, true)) {
                        conf.onSuccess();
                    } else {
                        conf.onError();
                    }
                    return false;
                });

                $('#s2_protocol').on('change', function(){checkModalProtocol()});

                $(document).on('click', "#modalbox, #modalbox a.close-link, #modalbox a.close-link *", function(e){
                    if (e.currentTarget != e.target) {
                        return;
                    }
                    e.stopPropagation();
                    e.preventDefault();
                    closeModalBox();
                    return false;
                });

                $("#add_karaoke").on("click", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    $.validate();
                    $('#karaoke_form').get(0).reset();
                    var tmp_id = $('#datatable-1 tr:last').attr('id');
                    if (!tmp_id) {
                        tmp_id = "tr_" + $.randString();
                        $('#datatable-1 tr:last').attr('id', tmp_id);
                    }
                    $("#modalbox_ad").data('tr_id', tmp_id);
                    $("#modalbox_ad").find(".modal-header-name").children('span').text("{{ 'Add'|trans }}");
                    $("#modalbox_ad input").prop("disabled", false).removeAttr('disabled').val('');
                    $("#modalbox_ad input[type='hidden']").attr('disabled', 'disabled').val('');
                    $("#modalbox_ad select").prop("disabled", false).removeAttr('disabled').find('option').prop("selected", false).removeAttr('selected');
                    checkModalProtocol();
                    $("#modalbox_ad").show();
                    return false;
                });

                LoadDataTablesScripts(TestTable1);
                LoadSelect2Script(DemoSelect2);
            });
        }

        document.addEventListener("DOMContentLoaded", yelp, false);

        var setKaraokeModal = function (data) {
            $.validate();
            $('#karaoke_form').get(0).reset();
            $("#modalbox_ad").find(".modal-header-name").children('span').text("{{ 'Edit'|trans }}");
            if (data.data.length == 1) {
                var row = data.data[0];
                for (var field_name in row) {
                    $("#modalbox_ad input[name='" + field_name + "']").val(row[field_name]);
                }
                $("#modalbox_ad select[name='protocol'] option").each(function () {
                    $(this).prop('selected', $(this).val().toString() == data.data[0]['protocol'].toString());
                })
            }
            $("#modalbox_ad input").removeAttr('disabled');
            checkModalProtocol();
            $("#modalbox_ad").show();
        };

        var removeKaraoke = function (obj) {
            var cRow = $(obj).closest('tr');
            $('#datatable-1').DataTable().row(cRow).remove().draw(false);
        };

        var manageKaraoke = function (obj) {
            $("#modalbox_ad").click();
            $('#datatable-1').DataTable().ajax.reload();
        };

        var manageKaraokeError = function(obj){
            /*if (typeof(obj.error) != 'undefined' && obj.error.length > 0) {
                alert(obj.error);
            }*/
            JSshowModalBox();
            JSErrorModalBox(obj);
            $('#datatable-1').DataTable().ajax.reload();
        };

        var checkSourceKaraoke = function (obj){
            $('#modalbox').show();
			$('#modalbox').find('.devoops-modal-bottom').html('<div class="pull-right no-padding">&nbsp;</div>\n\
                        <div class=" pull-right no-padding">\n\
                            <a type="reset" class="close-link btn btn-default pull-right" >{{ 'Close'|trans }}</a>\n\
                        </div> </form>');
            $('#modalbox').find('.modal-header-name span').text("{{ 'Information about the media source'|trans }}");
            var baseInfo = obj.base_info;
            if (typeof(baseInfo) == 'string') {
                $('#modalbox').find('.devoops-modal-inner').append('<span>' + baseInfo + '</span>');
            } else if (typeof(baseInfo) == 'object') {
                var table = $('<table class="video_info"></table>').appendTo($('#modalbox').find('.devoops-modal-inner'));
                table.append("<tr><td>{{ 'Storage'|trans }}</td><td>{{ 'File'|trans }}</td></tr>");
                $.each(baseInfo, function(index, value){
                    var trStr = '<tr><td>'+ value.storage_name +'</td><td>'+ value.file +'</td></tr>';
                    table.append(trStr);
                });
            }
			
            $('#datatable-1').DataTable().ajax.reload();
        };

        var checkSourceKaraokeError = function(obj){
            JSErrorModalBox(obj);
        };
    </script>
{% endblock %}