{% extends 'layout.twig' %}
{% import '/macro/iptw_macro.twig' as main_macro %}
{% set title = ('Users'|trans ~ ': ' ~ 'STB statuses report '|trans ~ app.now_time) | trans %}

{% block content %}
    <style type="text/css">
        @media print{
            #datatable-1{
                max-width: 180mm;
            }
            #datatable-1 th, #datatable-1 td{
                max-width: 60mm;
            }
        }
    </style>
    <div id="iptv_list">
        <div class="row row_no_padding">
            <div class="box">
					{% if attribute(app, 'dropdownAttribute') is defined %}
                    {{ main_macro.get_dropdown_attribute(app['dropdownAttribute']) }}
                    {% endif %}	
                <div class="box-content">
                    <div class="box-content no-padding">
                        <div class="" id="table_container">
                            <div class="dataTables_processing"></div>
                            <table class="table dataTable table-hover table-datatable" id="datatable-1">
                                {% if attribute(app, 'dropdownAttribute') is defined %}
                                    {{ main_macro.get_datatable_head(app['dropdownAttribute']) }}
                                {% endif %}
                                <tbody>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript" defer>

        function TestTable1() {
            $('#datatable-1').on('xhr.dt', function (e, settings, json) {
                if (typeof (json.data) == 'object' && json.data.length >0) {
                    var date;
                    for (var i in json.data) {
                        var status = json.data[i].status;
                        var mac = json.data[i].mac;
                        var id = json.data[i].id;
                        json.data[i].mac = '<a href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/edit-users?id='+ id +'" >'+ mac +'</a>';
                        json.data[i].status = (status != 0 ? "<span class=''>{{ 'off'|trans }}</span>" : "<span class=''>{{ 'on'|trans }}</span>");
                        date = json.data[i]['last_change_status'];
                        if (date > 0) {
                            date = new Date(date * 1000);
                            json.data[i]['last_change_status'] = date.toLocaleFormat("%b %d, %Y %H:%M");
                        }
                    }
                }
            }).dataTable({
                "processing": true,
                "serverSide": true,
                "dom": 'T<"clear">lfrtip',
                "oTableTools": {
                    "sSwfPath":        "plugins/datatables/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
                    "aButtons": [
                        {
                        "sExtends": "print",
                        "bShowAll": true,
                        "sMessage": "<h3>{{ 'STB statuses report'|trans }} ({{ "now"|date("d.m.Y") }} {{ "now"|date("H:i:s") }})</h3>",
                        "sButtonText": "{{ 'Print'|trans }}"
                        }]
                },
                "ajax": {
                    "url": "{{ app.request.baseUrl }}/{{ app.controller_alias }}/users-consoles-report-json",
                    "data": function (d) {
                        d.print = false;
                    }
                },
                "deferLoading": [ {{ app.recordsFiltered }}, {{ app.totalRecords }} ],
                "language": {
                    "url": "{{ app.datatable_lang_file }}"
                },
                {% if attribute(app, 'dropdownAttribute') is defined %}
                {{ main_macro.get_datatable_column(app['dropdownAttribute']) }}
                {% endif %}
                "bFilter": true,
                "bPaginate": true,
                "bInfo": true,
                "aoColumnDefs": [
                    {"searchable": false, "targets": [0]},
                    {"sortable": false, "targets": [0]}
                ]
            }).prev('.dataTables_processing').hide('');
            $('#datatable-1').DataTable().ajax.reload();
        }

        function yelp() {
            $(document).ready(function () {
                
                $('head').append('<link href="{{ app.request.baseUrl }}/css/dataTables.tableTools.css" type="text/css" rel="stylesheet" />');
                $(document).on('click', '.btn.DTTT_button_print', function(){
                    $("#table_container").removeClass('col-sm-offset-2');{#.parents().map(function(){$(this).css('padding-left', 0);});#}
                })
                $(document).on('click', "a.main_ajax", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var _this = $(this);

                    $.ajax({
                        url: $(this).attr('href'),
                        type: 'POST',
                        data: $(this).data(),
                        success: function (data) {
                            if (data.success) {
                                for (var key in data) {
                                    _this.data(key, data[key]);
                                }
                            } else {
                                alert("{{ 'Some server error'|trans }}");
                            }
                        },
                        error: function (data) {
                            var errAction = '';
                            if (typeof (data.responseJSON) == 'object') {
                                errAction += data.responseJSON.action + 'Error';
                                for (var key in data.responseJSON) {
                                    _this.data(key, data.responseJSON[key]);
                                }
                            }
                            if ($.isFunction(window[errAction])) {
                                window[errAction]($(_this));
                            } else {
                                alert("{{ 'Some network error or access denied'|trans }}");
                            }
                        },
                        dataType: "json",
                        async: false
                    });

                    if ($.isFunction(window[$(this).data('action')]) && !$(this).data('error')) {
                        window[$(this).data('action')]($(this));
                    }
                    _this.closest('div.open').removeClass('open');
                    return false;
                });

                LoadDataTablesScripts(TestTable1);
            });
        }

        document.addEventListener("DOMContentLoaded", yelp, false);

    </script>
{% endblock %}