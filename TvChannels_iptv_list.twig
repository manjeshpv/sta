{% extends 'layout.twig' %}
{% import '/macro/iptw_macro.twig' as main_macro %}

{% set active = 'tv-channels' %}
{% set title = ('IPTV channels'|trans ~ ': ' ~ 'channels list'|trans) | trans %}

{% block content %}
    <div id="iptv_list">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                {{ main_macro.get_filter('tv_genre_id', 'Genre'|trans, 'id', 'title', app['allGenres'], 2) }}
                {{ main_macro.get_filter('archive_id', 'Archive'|trans, 'id', 'title', app['allArchive'], 2) }}
                {{ main_macro.get_filter('status_id', 'Status'|trans, 'id', 'title', app['allStatus'], 2) }}
                {{ main_macro.get_filter('monitoring_status', 'Monitoring status'|trans, 'id', 'title', app['allMonitoringStatus'], 2) }}
                <a href="{{app.request.baseUrl}}/{{ app.controller_alias }}/add-channel" class="btn btn-success pull-right">{{ 'Add a channel'|trans }}</a>
                <a href="{{app.request.baseUrl}}/{{ app.controller_alias }}/restart-all-archives" class="btn btn-success pull-right" id="restart_archives_button">{{ 'Restart all TV archives'|trans }}</a>
            </div>
        </div>

        <div class="row">
            <div class="">
                    <div class="box">
                        {% if attribute(app, 'dropdownAttribute') is defined %}
                        {{ main_macro.get_dropdown_attribute(app['dropdownAttribute']) }}
                        {% endif %}
                        <div class="box-content">
                            <div class="box-content no-padding">
                                <div class="dataTables_processing"></div>
                                <table class="table table-hover table-datatable" id="datatable-1">
                                    {% if attribute(app, 'dropdownAttribute') is defined %}
                                        {{ main_macro.get_datatable_head(app['dropdownAttribute']) }}
                                    {% endif %}
                                    <tbody>
                                     </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>

    <div id="modalbox_ad">
        <div class="devoops-modal">
            <div class="devoops-modal-header">
                <div class="modal-header-name">
                    <span>EPG</span>
                </div>
                <div class="box-icons">
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="devoops-modal-inner">
                <div class="box">
                    <div class="box-content">
                        <form class="form-horizontal" role="form" id="epg_form" action="{{ app.request.baseUrl }}/{{ app.controller_alias }}/save-channel-epg-item">
                            <!-- name -->
                            <div class="form-group">
                                <label class="col-sm-3 control-label col-xs-offset-1">{{ 'Channel'|trans }}</label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10 ">
                                        <select class="populate placeholder own_fields" name="ch_id" id="s2_channel" >
                                            {% if attribute(app, 'allChannels') is defined %}
                                                {% for item in app.allChannels %}
                                                    <option value="{{ item.id }}">{{ item.name }}</option>
                                                {% endfor %}
                                            {% endif %}
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label col-xs-offset-1">{{ 'Date'|trans }}</label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10 col-sm-offset-1">
                                        <input type='text' class='datepicker col-sm-6 own_fields' data-date-format='dd-mm-yy' name='epg_date' id="epg_date">
                                        <button class="btn btn-success col-sm-5 pull-right" id="get_epg_button">{{ 'Show EPG'|trans }}</button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label col-xs-offset-1">EPG</label>
                                <div class="col-xs-10 col-sm-8 no-padding">
                                    <div class=" col-xs-10 col-sm-10 ">
                                        <textarea name="epg" id="epg_body" class='own_fields form-control' rows="18"></textarea>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
            <div class="devoops-modal-bottom">
                <div class="box">
                    <div class="box-content">
                        <div class="row">
                            <div class="col-xs-10 col-sm-6 pull-right">
                                <button type="submit" class="btn btn-success col-sm-5 pull-right">{{ 'Save'|trans }}</button>
                                <button type="reset" class="btn btn-default col-sm-5 pull-left" >{{ 'Cancel'|trans }}</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript" defer>

        function DemoSelect2() {
            $.getScript("{{ app.request.baseUrl }}/plugins/select2/i18n/{% if app["language"] %}{{ app["language"] }}{% else %}en{% endif %}.js", function() {
                $.fn.select2.defaults.set('dropdownAutoWidth', 'false');
                $.fn.select2.defaults.set('width', '100%');
                $('#s2_channel').select2({minimumResultsForSearch: -1});
            });
        }

        function TestTable1() {
            $('#datatable-1').on('xhr.dt', function (e, settings, json) {
                if (typeof (json.data) == 'object') {
                    for (var i in json.data) {
                        var status = json.data[i].status;
                        var claimsCount = json.data[i].sound_counter + json.data[i].video_counter + json.data[i].no_epg + json.data[i].wrong_epg;
                        json.data[i].logo = '<img class="img-rounded channel-logo" src="' + ( json.data[i].logo ? json.data[i].logo + "?" + $.random(100000) : '') + '" alt="">';
                        json.data[i].name = '<a href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/edit-channel?id=' + json.data[i].id + '">' + json.data[i].name + '</a>';
                        json.data[i].enable_tv_archive = ( json.data[i].enable_tv_archive ? "{{ 'Yes'|trans }}" : "{{ 'No'|trans }}");
                        json.data[i].status = ( json.data[i].status ? "{{ 'Published'|trans }}" : "{{ 'Unpublished'|trans }}");

                        if (claimsCount) {
                            if(json.data[i].video_counter){
                                json.data[i].claims = json.data[i].video_counter;
                            }
                            json.data[i].claims += '/';

                            if(json.data[i].sound_counter){
                                json.data[i].claims += json.data[i].sound_counter;
                            }
                            json.data[i].claims += '/';

                            if(json.data[i].no_epg){
                                json.data[i].claims += json.data[i].no_epg;
                            }
                            json.data[i].claims += '/';

                            if(json.data[i].wrong_epg){
                                json.data[i].claims += json.data[i].wrong_epg;
                            }
                        } else {
                            json.data[i].claims = "///";
                        }
                        json.data[i].operations = '<div class="col-xs-3 col-sm-8 ddd">\n\
                                                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">\n\
                                                            <i class="pull-right fa fa-cog"></i>\n\
                                                        </a>\n\
                                                        <ul class="dropdown-menu pull-right">\n\
                                                            <li>\n\
                                                                <a class="" href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/edit-channel?id=' + json.data[i].id  + '">\n\
                                                                    <span>{{ 'Edit'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/move-channel">\n\
                                                                    <span>{{ 'Move'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class="main_ajax" href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/remove-channel?id=' + json.data[i].id  + '">\n\
                                                                    <span>{{ 'Delete'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class="main_ajax" href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/' + (status ? 'disable' : 'enable') + '-channel?id=' + json.data[i].id  + '">\n\
                                                                    <span>' + (status ? "{{ 'Unpublish'|trans }}" : "{{ 'Publish'|trans }}") + '</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class="main_ajax" ' + (claimsCount ? '': 'disabled="disabled"') + ' href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/itv-reset-claims" data-media_id="' + json.data[i].id  + '" data-media_type="' + json.data[i].media_type  + '">\n\
                                                                    <span>{{ 'Reset media-claims'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                            <li>\n\
                                                                <a class="main_ajax" href="{{ app.request.baseUrl }}/{{ app.controller_alias }}/get-channel-epg-item?id=' + json.data[i].id  + '">\n\
                                                                    <span>{{ 'Manage EPG'|trans }}</span>\n\
                                                                </a>\n\
                                                            </li>\n\
                                                        </ul>\n\
                                                    </div>';

                    }
                }
            }).dataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "{{ app.request.baseUrl }}/{{ app.controller_alias }}/iptv-list-json",
                    "data": function (d) {
                        var params = $.parseParams(window.location.href.split('?')[1] || ''); //window.location.href.split('?')[1] || ''
                        for (var i in params) {
                            d[i] = params[i];
                        }
                    }
                },
                "language": {
                    "url": "{{ app.datatable_lang_file }}"
                },
                "bFilter": true,
                "bPaginate": true,
                "bInfo":     true,
                "deferLoading": [{{ app.recordsFiltered }}, {{ app.totalRecords }}],
                {% if attribute(app, 'dropdownAttribute') is defined %}
                {{ main_macro.get_datatable_column(app['dropdownAttribute']) }}
                {% endif %}
                "aoColumnDefs": [ 
                    { "targets": [ -1 ], "sortable": false},
                    {#{ "searchable": false, "targets": [ 2, 5, 7, 8] },#}
                    { className: "action-menu", "targets": [ -1 ] }
                ]
            }).prev('.dataTables_processing').hide('');
            $('#datatable-1').DataTable().ajax.reload();
        }

        function yelp() {
            $(document).ready(function () {

                LoadDataTablesScripts(TestTable1);
                LoadSelect2Script(DemoSelect2);

                $(".datepicker").datepicker({
                    language    : '{% if attribute(app, 'locale') is defined and app['locale']|length == 2 %}{{ app['locale'] }}{% else %}en{% endif %}',
                    dateFormat  : 'dd-mm-yy',
                    firstDay    : 1,
                    dayNamesMin : [
                        '{{ 'Sun'|trans }}',
                        '{{ 'Mon'|trans }}',
                        '{{ 'Tue'|trans }}',
                        '{{ 'Wed'|trans }}',
                        '{{ 'Thu'|trans }}',
                        '{{ 'Fri'|trans }}',
                        '{{ 'Sat'|trans }}'
                    ],
                    monthNames  : [
                        '{{ 'January'|trans }}',
                        '{{ 'February'|trans }}',
                        '{{ 'March'|trans }}',
                        '{{ 'April'|trans }}',
                        '{{ 'May'|trans }}',
                        '{{ 'June'|trans }}',
                        '{{ 'July'|trans }}',
                        '{{ 'August'|trans }}',
                        '{{ 'September'|trans }}',
                        '{{ 'October'|trans }}',
                        '{{ 'November'|trans }}',
                        '{{ 'December'|trans }}'
                    ]
                });

                $(document).on('click', "a.main_ajax", function (e) {
                    e.stopPropagation();
                    e.preventDefault();
                    var _this = $(this);
                    $.ajax({
                        url: $(this).attr('href'),
                        type: 'GET',
                        success: function (data) {
                            if (data.success) {
                                manageChannelTable(data);
                            } else {
                                JSErrorModalBox(data);
                            }
                        },
                        error: function (data) {
                            JSErrorModalBox((data.responseJSON ? data.responseJSON: {msg : "{{ 'Some network error or access denied'|trans }}"}));
                        },
                        dataType: "json",
                        async: false
                    });
                    _this.closest('div.open').removeClass('open');
                    return false;
                });

                $("#datatable-1").on('click', "a[href*='get-channel-epg-item']", function(e){
                    e.stopPropagation();
                    e.preventDefault();
                    ajaxPostSend(this.href, {});
                    $(this).closest('div.open').removeClass('open');
                });

                $(document).on('change', "#s2_channel", function(e){
                    ajaxPostSend("{{ app.request.baseUrl }}/{{ app.controller_alias }}/get-channel-epg-item?id=" + $(this).val(), {});
                });
                $(document).on('click', "#get_epg_button", function(e){
                    e.stopPropagation();
                    e.preventDefault();
                    if ($("#s2_channel").val()) {
                        ajaxPostSend("{{ app.request.baseUrl }}/{{ app.controller_alias }}/get-channel-epg-item?id=" + $("#s2_channel").val(), {epg_date : $("#epg_date").val()});
                    } else {
                        JSErrorModalBox({msg: "{{ 'Channel not selected'|trans }}"})
                    }
                });

                $("#modalbox_ad").on('click', "button[type='submit']", function(e){
                    var sendData = {id:0, epg_data:'', epg_body: ''};
                    sendData.id = $("#s2_channel").val();
                    sendData.epg_date = $("#epg_date").val();
                    sendData.epg_body = $("#epg_body").val();
                    JSshowModalBox();
                    ajaxPostSend($('#epg_form').attr('action'), sendData);
                });
                $(document).on('click', "#modalbox, #modalbox a.close-link, #modalbox a.close-link *", function(e){
                    if (e.currentTarget != e.target) {
                        return;
                    }
                    e.stopPropagation();
                    e.preventDefault();
                    JScloseModalBox();
                    return false;
                });

                $(document).on('click', '#restart_archives_button', function(e){
                    e.stopPropagation();
                    e.preventDefault();
                    JSshowModalBox();
                    ajaxPostSend($(this).attr('href'), {});
                    return false;
                });

                $("#datatable-1").on('click', "a[href$='itv-reset-claims']", function(e){
                    e.stopPropagation();
                    e.preventDefault();
                    if ($(this).attr("disabled")) {
                        JSErrorModalBox({msg: "{{ 'This action is unavailable'|trans }}"})
                    } else {
                        $(this).closest('.open').removeClass("open");
                        $("#modalbox").data('complete', 1);
                        $('#modalbox').find('.devoops-modal-header').html("\n\
                                    <div class='row'>\n\
                                        <div class='col-xs-10 col-sm-10'>\n\
                                            <span class='text-default'>{{ 'Reset claims counter?'|trans }}</span>\n\
                                        </div>\n\
                                    </div>");
                        $('#modalbox').find('.devoops-modal-inner').html("\n\
                                    <div class='row'>\n\
                                        <div class='col-xs-10 col-sm-10'>\n\
                                            <span>{{ 'Do you really want to reset claims counter?'|trans }}</span>\n\
                                        </div>\n\
                                    </div>");
                        $('#modalbox').find('.devoops-modal-bottom').html("\n\
                                    <div class='col-xs-10 col-sm-6 pull-right'>\n\
                                        <button type='submit' id='reset_claims_counter' class='btn btn-success col-sm-5 pull-right'>{{ 'Reset'|trans }}</button>\n\
                                        <button type='reset' class='btn btn-default col-sm-5 pull-left' >{{ 'Cancel'|trans }}</button>\n\
                                    </div>");
                        $("#reset_claims_counter").data($(this).data());
                        $('#modalbox').show();
                    }
                    return false;
                });

                $(document).on('click', '#reset_claims_counter', function(e){
                    $('#modalbox').hide();

                    ajaxPostSend("{{ app.request.baseUrl }}/{{ app.controller_alias }}/itv-reset-claims", { media_id: $(this).data("media_id"), media_type: $(this).data("media_type")}, false, false);
                });
            });
        }

        document.addEventListener("DOMContentLoaded", yelp, false);

        function showModalBox(data){
            fillEPGForm(data);
            $("#modalbox_ad").show();
        }

        function fillEPGForm(data){
            $( "#s2_channel option[value='"+data.ch_id+"']").prop('selected', 'selected');
            $( "#epg_date").removeAttr('disabled').datepicker( "setDate", data.epg_date);
            $( "#epg_body" ).val(data.epg_body);
        }

        var saveEPGSuccess = function(){
            JSSuccessModalBox();
        };

        var saveEPGSuccessError = function(){
            JSErrorModalBox();
        };

        var restartArchive = function(data){
            $("#modalbox").data('complete', 1);
            $('#modalbox').find('.devoops-modal-inner').html('<span>{{ 'Done'|trans }}! ' + (data.msg ? data.msg : '') +  '</span>');
        };

        var restartArchiveError = function(data){
            $('#modalbox').find('.devoops-modal-inner').html('<span>{{ 'Error'|trans }}! ' + (data.error? data.error: '') +  '</span>');
            $("#modalbox").data('complete', 1);
        };

        var manageChannelTable = function(obj){
            JSSuccessModalBox(obj);
            $('#datatable-1').DataTable().ajax.reload();
        }

    </script>
{% endblock %}